.gameScene {
    position: relative;
    width: 100%;
    height: 100vh;
    max-height: 100vh;
    overflow: hidden;
    color: #fff;
    background: #000; /* fallback if no background is set */
    overflow: hidden;
  }
  
  .backgroundLayers {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }
  
  .backgroundLayer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    transition: opacity 0.5s ease-in-out;
  }
  
  /* Background Fade Transition */
  .background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    transition: opacity 0.5s ease;
    z-index: 1;
  }
  .fadeIn {
    opacity: 1;
  }
  .fadeOut {
    opacity: 0;
  }
  
  /* Avatars Container */
  .avatarsContainer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
    pointer-events: none; /* so clicks pass through to prompts if you want */
  }
  
  /* Each Avatar */
  .avatarWrapper {
    position: absolute;
    transform: translate(-50%, -50%); /* Adjust as needed if you want the position to be center-based */
    pointer-events: none;
  }
  
  /* Avatar image styling */
  .avatar {
    width: 200px; /* Adjust as needed */
    height: auto;
    border-radius: 50%;
    border: 0px solid rgba(255,255,255,0.3);
  }
  
  /* Speech Bubble for the speaker */
  .speechBubble {
    position: absolute;
    left: 110%;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.8);
    padding: 1rem;
    border-radius: 10px;
    min-width: 400px;
    color: black;
    line-height: 1.4;
    font-size: 0.9rem;
    pointer-events: none; /* so bubble doesn't block clicks */
    
    /* arrow-like shape (optional) */
    box-shadow: 0 2px 10px rgba(0,0,0,0.3);
    z-index: 2;
  }

  .speechBubble::after {
    content: "";
    position: absolute;
    top: 50%;
    left: -10px;
    transform: translateY(-50%);
    border: 5px solid transparent;
    border-right-color: rgba(255, 255, 255, 0.1);
  }
  
  /* Prompts Container (right side) */
  .promptsContainer {
    position: absolute;
    top: 50%;
    right: 1rem;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    gap: 1rem;
    z-index: 3;
  }
  
  /* Individual prompt items */
  .promptItem {
    background: rgba(0, 0, 0, 0.7);
    padding: 1rem;
    border-radius: 10px;
    cursor: pointer;
    font-size: 1rem;
    transition: background 0.3s ease;
  }
  .promptItem:hover {
    background: rgba(255, 255, 255, 0.1);
  }
  
  /* Bottom Bar for input and next/exit */
  .bottomBar {
    position: absolute;
    bottom: 1rem;
    left: 0;
    width: 100%;
    padding: 0 2rem;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: 1rem;
    z-index: 5;
  }
  
  /* Input box at bottom */
  .inputBox {
    flex: 1;
    padding: 0.75rem 1rem;
    border-radius: 5px;
    border: none;
    font-size: 1rem;
    outline: none;
    background: rgba(255, 255, 255, 0.9);
    color: #000;
  }
  
  /* Button styling for Next, Exit, Send */
  .sendButton,
  .nextButton,
  .exitButton {
    padding: 0.75rem 1rem;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    color: #fff;
    transition: background 0.3s ease;
  }
  .sendButton {
    background: rgba(0, 255, 100, 0.2);
  }
  .sendButton:hover {
    background: rgba(0, 255, 100, 0.4);
  }
  .nextButton {
    background: rgba(0, 100, 255, 0.2);
  }
  .nextButton:hover {
    background: rgba(0, 100, 255, 0.4);
  }
  .exitButton {
    background: rgba(255, 0, 0, 0.2);
  }
  .exitButton:hover {
    background: rgba(255, 0, 0, 0.4);
  }
  /* Initial Loading Background */
.loadingBackground {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    animation: zoomIn 3s ease forwards;
    z-index: 100;
  }
  
  @keyframes zoomIn {
    from {
      transform: scale(1);
      opacity: 1;
    }
    to {
      transform: scale(1.2);
      opacity: 0;
    }
  }
  
  /* Character Styling */
  .character {
    position: absolute;
    width: 150px;
    height: 200px;
    background-size: cover;
    background-position: center;
    z-index: 10;
  }

  .audio {
    display: none; /* Hide the audio element */
  }

  .controlButtons {
    position: absolute;
    top: 20px;
    left: 20px;
    display: flex; /* Ensures buttons are laid out in a row */
    flex-direction: row; /* Horizontal layout */
    gap: 10px; /* Adds space between buttons */
    z-index: 101; /* Ensure buttons are above other elements */
  }
  
  .homeButton, .modeButton {
    position: relative; /* Relative to their container */
    background: rgba(150, 75, 0, 0.8); /* Transparent background */
    color: white; /* Text color */
    border: none;
    padding: 0.75rem 1rem;
    border-radius: 5px;
    cursor: pointer;
    font-size: 0.9rem;
    transition: background 0.3s ease;
  }
  
  .homeButton:hover, .modeButton:hover {
    background: rgba(150, 75, 0, 0.4); /* Change background on hover */
  }
  
  .puzzleOverlay {
    position: absolute;
    margin-left: 15%;
    top: 0;
    left: 0;
    width: 70%;
    height: 70%;
    display: flex;
    align-items: center;
    justify-content: center;
    align-self: center;
    background: rgba(0, 0, 0, 0.5);
    z-index: 2;
    animation: fadeIn 0.3s ease-in-out;
  }
  
  .puzzleImage {
    max-width: 80%;
    max-height: 80%;
    object-fit: contain;
    border-radius: 10px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  .companion {
    position: absolute;
    z-index: 5;
    transition: transform 0.3s ease;
  }
  
  .companion:hover {
    transform: scale(1.1);
  }
  
  .companion img {
    width: 100px;
    height: 100px;
    object-fit: contain;
  }

  .exitOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.95);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 3;
  }
  
  .exitMessage {
    max-width: 600px;
    text-align: center;
    padding: 2rem;
    font-size: 1.2rem;
    color: #333;
  }
  
  .exitButton {
    background: #ff4444;
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
  }
  
  .exitButton:hover {
    background: #ff6666;
  }

  .loadingOverlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(255, 255, 255, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: inherit;
  }
  
  .spinner {
    width: 30px;
    height: 30px;
    border: 3px solid #f3f3f3;
    border-top: 3px solid #3498db;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .assetButton {
    margin-top: 35px;
    padding: 8px 16px;
    border-radius: 4px;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .assetButton.enabled {
    background-color: #4CAF50;
    color: white;
  }

  .companionContainer {
    position: absolute;
    z-index: 4;
  }
  
  .companionBubble {
    position: absolute;
    background: white;
    border-radius: 20px;
    padding: 15px;
    max-width: 250px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    bottom: 120%;
    left: 50%;
    transform: translateX(-50%);
  }
  
  .companionBubble::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    border-width: 10px 10px 0;
    border-style: solid;
    border-color: white transparent transparent;
  }

  .assetsContainer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
    pointer-events: none;
  }
  
  .asset {
    position: absolute;
    max-width: 200px;
    max-height: 200px;
    object-fit: contain;
  }